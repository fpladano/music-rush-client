{"version":3,"sources":["img/Spotify_Logo_RGB_Black.png","Login.js","Navbar.js","AddMusic.js","Player.js","SongInfo.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","Container","className","style","minHeight","marginBottom","href","src","logo","alt","height","marginTop","Navbar","userInfo","borderRadius","background","padding","image","marginLeft","marginRight","name","AddMusic","track","playlistTracks","onAddToPlaylist","useState","isOnPlaylist","setIsOnPlaylist","useEffect","forEach","playlistTrack","uri","btnColor","type","onClick","Player","accessToken","trackUri","getCurrentPlayingTrack","token","uris","showSaveIcon","callback","SongInfo","albumUrl","width","maxWidth","artists","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","err","clearInterval","useAuth","userTracksSeed","setUserTracksSeed","recommendedResults","setRecommendedResults","currentTrack","setCurrentTrack","userProfile","setUserProfile","appPlaylist","setAppPlaylist","getMe","id","body","display_name","images","url","console","log","getUserPlaylists","playlistExist","items","playlist","getPlaylist","createPlaylist","description","public","getMyTopTracks","limit","topTracks","map","getRecommendations","seed_tracks","tracks","smallestAlbumImage","album","reduce","smallest","artist","title","overflow","addTracksToPlaylist","songName","largeImage","filter","recommendedTrack","URLSearchParams","search","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22bc3246.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spotify_Logo_RGB_Black.0d1e5545.png\";","import React from \"react\";\n\nimport logo from \"./img/Spotify_Logo_RGB_Black.png\";\n\nimport { Container } from \"react-bootstrap\";\n\n// GET Request to Spotify API using our Client ID\nconst AUTH_URL =\n  \"https://accounts.spotify.com/authorize?client_id=19fbc1a2a4924852b1b82237f0e3157b&response_type=code&redirect_uri=https://fpladano.github.io/music-rush-client&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20playlist-modify-public%20user-top-read%20user-library-read%20user-library-modify\";\n\nexport default function Login() {\n  return (\n    <Container\n      className=\"d-flex flex-column justify-content-center align-items-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <h1 className=\"display-1\">Music Rush</h1>\n      <p\n        className=\"display-6 text-center text-muted\"\n        style={{ marginBottom: \"1.8rem\" }}\n      >\n        Create a Playlist just for You!\n      </p>\n      <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\n        Login With Spotify\n      </a>\n      <div>\n        <img\n          src={logo}\n          alt={\"\"}\n          style={{ height: \"2rem\", marginTop: \"2rem\" }}\n        ></img>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\n\nexport default function Navbar({ userInfo }) {\n  return (\n    <div\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: \"2rem\" }}\n    >\n      <div\n        className=\"d-flex align-items-center\"\n        style={{\n          height: \"100%\",\n          borderRadius: \"1rem\",\n          background: \"#222\",\n          padding: \"2px\",\n        }}\n      >\n        <img\n          src={userInfo.image}\n          alt=\"Profile Pic\"\n          style={{\n            height: \"100%\",\n            borderRadius: \"2rem\",\n            marginLeft: \"0.25rem\",\n          }}\n        />\n        <h5\n          className=\"h5 text-light\"\n          style={{\n            marginBottom: \"0\",\n            marginLeft: \"0.5rem\",\n            marginRight: \"0.5rem\",\n          }}\n        >\n          {userInfo.name}\n        </h5>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"./img/Spotify_Logo_RGB_Black.png\";\n\nexport default function AddMusic({ track, playlistTracks, onAddToPlaylist }) {\n  const [isOnPlaylist, setIsOnPlaylist] = useState(false);\n\n  useEffect(() => {\n    playlistTracks?.forEach((playlistTrack) => {\n      if (playlistTrack.track.uri === track.uri) return setIsOnPlaylist(true);\n      return setIsOnPlaylist(false);\n    });\n  }, [track, playlistTracks]);\n\n  if (track?.uri === \"\") return null;\n\n  const btnColor = isOnPlaylist ? \"btn-success\" : \"btn-dark\";\n\n  return (\n    <div\n      className=\"d-flex justify-content-between\"\n      style={{ marginBottom: \"2rem\" }}\n    >\n      <button\n        type=\"button\"\n        className={[`btn ${btnColor}`]}\n        onClick={onAddToPlaylist}\n      >\n        {isOnPlaylist ? \"Added\" : \"Add to Playlist\"}\n      </button>\n      <img src={logo} alt={\"\"} style={{ height: \"2rem\" }}></img>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({\n  accessToken,\n  trackUri,\n  getCurrentPlayingTrack,\n}) {\n  if (!accessToken) return null;\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      uris={trackUri ? trackUri : []}\n      showSaveIcon={false}\n      callback={({ track }) => getCurrentPlayingTrack(track)}\n    />\n  );\n}\n","import React from \"react\";\n\nexport default function SongInfo({ track }) {\n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <img\n        src={track?.image[0]?.albumUrl}\n        alt={\"\"}\n        style={{ width: \"90%\", maxWidth: \"420px\", marginBottom: \"2rem\" }}\n      />\n      <h1 className=\"text-center\">{track.name}</h1>\n      <h1 className=\"text-center text-muted\">{track.artists}</h1>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport Navbar from \"./Navbar\";\nimport AddMusic from \"./AddMusic\";\nimport Player from \"./Player\";\nimport SongInfo from \"./SongInfo\";\n\nimport { Container } from \"react-bootstrap\";\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"19fbc1a2a4924852b1b82237f0e3157b\",\n});\n\nexport default function Dashboard({ code }) {\n  // Access Token Auth\n  const accessToken = useAuth(code);\n\n  // Setting States\n  const [userTracksSeed, setUserTracksSeed] = useState();\n  const [recommendedResults, setRecommendedResults] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState();\n  const [userProfile, setUserProfile] = useState();\n  const [appPlaylist, setAppPlaylist] = useState();\n\n  // Access Token Request\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  //Request User Profile\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi\n      .getMe()\n      .then((data) => {\n        setUserProfile({\n          id: data.body.id,\n          name: data.body.display_name,\n          image: data.body.images[0].url,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [accessToken]);\n\n  // App Playlist Setup\n  useEffect(() => {\n    if (!accessToken) return;\n\n    // Getting All Playlist from the User\n    spotifyApi\n      .getUserPlaylists()\n      .then((data) => {\n        let playlistExist = false;\n\n        // Check If Music Rush Playlist exist\n        data.body.items.forEach((playlist) => {\n          if (playlist.name === \"Music Rush\") {\n            playlistExist = true;\n            spotifyApi\n              .getPlaylist(playlist.id)\n              .then((data) => {\n                return setAppPlaylist(data.body);\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          }\n        });\n\n        //If no Music Rush Playlist exist we create one\n        if (!playlistExist) {\n          spotifyApi\n            .createPlaylist(\"Music Rush\", {\n              description:\n                \"Playlist created with React.JS by Francisco Pladano\",\n              public: true,\n            })\n            .then((data) => {\n              return setAppPlaylist(data.body);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [accessToken]);\n\n  // User Top Tracks Request\n  useEffect(() => {\n    if (!accessToken) return;\n\n    spotifyApi\n      .getMyTopTracks({ limit: 5 })\n      .then((data) => {\n        let topTracks = data.body.items;\n        setUserTracksSeed(topTracks.map((track) => track.id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [accessToken]);\n\n  // User Recommended Track Request\n  useEffect(() => {\n    if (!userTracksSeed) return;\n    if (!accessToken) return;\n\n    spotifyApi\n      .getRecommendations({ seed_tracks: userTracksSeed })\n      .then((data) => {\n        setRecommendedResults(\n          data.body.tracks.map((track) => {\n            // Getting Smallest Album Image\n            const smallestAlbumImage = track.album.images.reduce(\n              (smallest, image) => {\n                if (image.height > smallest.height) return image;\n                return smallest;\n              },\n              track.album.images[0]\n            );\n\n            return {\n              artist: track.artists[0].name,\n              title: track.name,\n              uri: track.uri,\n              albumUrl: smallestAlbumImage.url,\n            };\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [userTracksSeed, accessToken]);\n\n  // Get Current Track from Player\n  function currentPlayingTrack(track) {\n    let songName = track.name;\n    let largeImage = recommendedResults.filter(\n      (recommendedTrack) => recommendedTrack.title === songName\n    );\n    setCurrentTrack({\n      name: track.name,\n      artists: track.artists,\n      image: largeImage,\n      uri: track.uri,\n    });\n  }\n\n  // Add track to playlist\n  function addToPlaylist() {\n    let isOnPlaylist = false;\n\n    // Check is current track is on the playlist\n    appPlaylist.tracks.items.forEach((playlistTrack) => {\n      if (playlistTrack.track.uri === currentTrack.uri)\n        return (isOnPlaylist = true);\n    });\n    if (isOnPlaylist) return;\n\n    // Adding Track\n    spotifyApi\n      .addTracksToPlaylist(appPlaylist.id, [currentTrack.uri])\n      .then((data) => {\n        // Track Added Now Updating Playlist State to show new Track\n        spotifyApi\n          .getPlaylist(appPlaylist.id)\n          .then((data) => {\n            setAppPlaylist(data.body);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n      <div>{userProfile && <Navbar userInfo={userProfile} />}</div>\n      {/* Track Info */}\n      <div\n        className=\"d-flex flex-grow-1 my-2 justify-content-center align-items-center\"\n        style={{ overflow: \"scroll\" }}\n      >\n        {currentTrack && <SongInfo track={currentTrack} />}\n      </div>\n      {/* Add to Music Rush */}\n      <div>\n        <AddMusic\n          track={currentTrack}\n          playlistTracks={appPlaylist?.tracks.items}\n          onAddToPlaylist={addToPlaylist}\n        />\n      </div>\n      {/* Player */}\n      <div>\n        <Player\n          accessToken={accessToken}\n          trackUri={recommendedResults.map((track) => {\n            return track.uri;\n          })}\n          getCurrentPlayingTrack={currentPlayingTrack}\n        />\n      </div>\n    </Container>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nconst proxyUrl = \"https://aqueous-garden-74884.herokuapp.com/\";\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n\n  useEffect(() => {\n    axios // !SEARCH THIS\n      .post(\"https://react-music-rush-server.herokuapp.com/login\", {\n        code,\n      })\n      .then((res) => {\n        // hola\n        setAccessToken(res.data.accessToken);\n        setRefreshToken(res.data.refreshToken);\n        setExpiresIn(res.data.expiresIn);\n        window.history.pushState({}, null, \"/music-rush-client\"); // !SEARCH THIS\n      })\n      .catch(() => {\n        window.location = \"/\";\n      });\n  }, [code]);\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios // !SEARCH THIS\n        .post(\"https://react-music-rush-server.herokuapp.com/refresh\", {\n          refreshToken,\n        })\n        .then((res) => {\n          setRefreshToken(res.data.refreshToken);\n          setExpiresIn(res.data.expiresIn);\n        })\n        .catch((err) => {\n          window.location = \"/music-rush-client\";\n        });\n    }, (expiresIn - 60) * 1000);\n\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n\n  return accessToken;\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  return code ? <Dashboard code={code} /> : <Login />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}